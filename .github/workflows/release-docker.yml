name: Docker

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
  push:
    branches: [main, "release/*"]
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-22.04
    # only on releases
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
    strategy:
      fail-fast: false
      matrix:
        # initially building only the latest supported configuration
        python_version: ["3.12"]
        pytorch_version: ["2.7.1"]
        cust_base: ["cu12.8.0-"]
        pl_version: ["2.7"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(echo ${GITHUB_REF##*/v})" >> $GITHUB_OUTPUT

      - name: Publish Latest to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: dockers/release/Dockerfile
          build-args: |
            PYTHON_VERSION=${{ matrix.python_version }}
            PYTORCH_VERSION=${{ matrix.pytorch_version }}
            CUST_BASE=${{ matrix.cust_base }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/finetuning-scheduler:fts${{ steps.get_version.outputs.RELEASE_VERSION }}-${{ matrix.cust_base }}py${{ matrix.python_version }}-pt${{ matrix.pytorch_version }}-pl${{ matrix.pl_version }},${{ secrets.DOCKERHUB_USERNAME }}/finetuning-scheduler:latest
        timeout-minutes: 55
